# Generated by Django 3.0.2 on 2020-03-26 20:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Affective_Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=500)),
                ('definition', models.CharField(max_length=500)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affective', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='CLO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=500)),
                ('description', models.CharField(max_length=500)),
                ('verb', models.CharField(max_length=500, null=True)),
                ('affectives', models.ManyToManyField(blank=True, to='Chairman_Framework.Affective_Domain')),
            ],
        ),
        migrations.CreateModel(
            name='PEO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=500)),
                ('description', models.CharField(max_length=500)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='peo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vision', models.CharField(max_length=500)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vision', to=settings.AUTH_USER_MODEL)),
                ('peos', models.ManyToManyField(related_name='peo', to='Chairman_Framework.PEO')),
            ],
        ),
        migrations.CreateModel(
            name='Psychomotor_Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=500)),
                ('definition', models.CharField(max_length=500)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='psychomotor', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='PLO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=500)),
                ('description', models.CharField(max_length=500)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plo', to=settings.AUTH_USER_MODEL)),
                ('peos', models.ManyToManyField(to='Chairman_Framework.PEO')),
            ],
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mission', models.CharField(max_length=500)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mission', to=settings.AUTH_USER_MODEL)),
                ('peos', models.ManyToManyField(to='Chairman_Framework.PEO')),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=500)),
                ('calendar_year', models.CharField(max_length=500)),
                ('code', models.CharField(max_length=500)),
                ('tittle', models.CharField(max_length=500)),
                ('clos', models.ManyToManyField(to='Chairman_Framework.CLO')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cognitive_Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=500)),
                ('definition', models.CharField(max_length=500)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cognitive', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.AddField(
            model_name='clo',
            name='cognitives',
            field=models.ManyToManyField(blank=True, to='Chairman_Framework.Cognitive_Domain'),
        ),
        migrations.AddField(
            model_name='clo',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clo', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='clo',
            name='plos',
            field=models.ManyToManyField(to='Chairman_Framework.PLO'),
        ),
        migrations.AddField(
            model_name='clo',
            name='psychomotors',
            field=models.ManyToManyField(blank=True, to='Chairman_Framework.Psychomotor_Domain'),
        ),
    ]
